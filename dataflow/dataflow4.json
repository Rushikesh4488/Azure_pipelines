{
	"name": "dataflow4",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dataflowRestFlowSamirDS",
						"type": "DatasetReference"
					},
					"name": "output"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "flatten2"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          body as (data as (avatar as string, email as string, first_name as string, id as short, last_name as string)[], page as boolean, per_page as short, support as (text as string, url as string), total as short, total_pages as short),",
				"          headers as [string,string]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     httpMethod: 'GET',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     paginationRules: ['supportRFC5988' -> 'true'],",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'documentPerLine'],",
				"     partitionBy('hash', 1)) ~> output",
				"output derive(id = body.data.id,",
				"          first_name = body.data.first_name,",
				"          last_name = body.data.last_name,",
				"          email_id = body.data.email,",
				"     partitionBy('hash', 1)) ~> derivedColumn1",
				"output foldDown(unroll(body.data),",
				"     mapColumn(",
				"          id = body.data.id,",
				"          first_name = body.data.first_name",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten2",
				"derivedColumn1 select(mapColumn(",
				"          id,",
				"          first_name,",
				"          last_name,",
				"          email_id",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1"
			]
		}
	}
}